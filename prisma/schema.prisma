// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @default(cuid())
  email        String        @unique
  name         String?
  applications Application[]
  notes        Note[]
  profile      UserProfile?
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model Application {
  id          String            @id @default(cuid())
  jobTitle    String
  company     Company           @relation(fields: [companyId], references: [id])
  companyId   String
  status      ApplicationStatus
  appliedDate DateTime          @default(now())
  link        String?
  description String?
  salary      String?
  location    String?
  jobType     JobType
  interviews  Interview[]
  notes       Note[]
  user        User              @relation(fields: [userId], references: [id])
  userId      String
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt
}

model Company {
  id           String        @id @default(cuid())
  name         String
  website      String?
  industry     String?
  applications Application[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model Interview {
  id            String          @id @default(cuid())
  application   Application     @relation(fields: [applicationId], references: [id])
  applicationId String
  type          InterviewType
  date          DateTime
  notes         Note[]
  feedback      String?
  status        InterviewStatus
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
}

model Note {
  id            String       @id @default(cuid())
  content       String
  application   Application? @relation(fields: [applicationId], references: [id])
  applicationId String?
  interview     Interview?   @relation(fields: [interviewId], references: [id])
  interviewId   String?
  user          User         @relation(fields: [userId], references: [id])
  userId        String
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
}

model UserProfile {
  id     String @id @default(cuid())
  user   User   @relation(fields: [userId], references: [id])
  userId String @unique

  // Professional Info
  jobRole           String?
  industry          String?
  yearsOfExperience Int?
  positionLevel     PositionLevel?
  currentSalary     Decimal?       @db.Decimal(12, 2)

  // Goals & Objectives
  careerGoals        String[]
  learningObjectives String[]

  // Additional Info
  companySize            CompanySize?
  location               String?
  preferredLearningStyle LearningStyle?
  timeAvailability       Int? // Hours per week
  primaryLanguage        String?

  // Skills (Consider if you want to normalize this later)
  skills Skill[]

  // Metadata
  onboardingCompleted Boolean  @default(false)
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
}

model Skill {
  id               String           @id @default(cuid())
  name             String
  proficiencyLevel ProficiencyLevel
  userProfile      UserProfile      @relation(fields: [userProfileId], references: [id])
  userProfileId    String
  createdAt        DateTime         @default(now())
  updatedAt        DateTime         @updatedAt
}

enum ApplicationStatus {
  SAVED
  APPLIED
  IN_PROGRESS
  REJECTED
  ACCEPTED
  WITHDRAWN
}

enum JobType {
  FULL_TIME
  PART_TIME
  CONTRACT
  INTERNSHIP
  REMOTE
  HYBRID
  ON_SITE
}

enum InterviewType {
  PHONE_SCREEN
  TECHNICAL
  BEHAVIORAL
  ONSITE
  TAKE_HOME
  FINAL
}

enum InterviewStatus {
  SCHEDULED
  COMPLETED
  CANCELLED
  RESCHEDULED
}

enum PositionLevel {
  ENTRY
  MID
  SENIOR
  EXECUTIVE
}

enum CompanySize {
  TINY // 1-10
  SMALL // 11-50
  MEDIUM // 51-200
  LARGE // 201-500
  ENTERPRISE // 500+
}

enum LearningStyle {
  VISUAL
  READING
  INTERACTIVE
  HANDS_ON
}

enum ProficiencyLevel {
  BEGINNER
  INTERMEDIATE
  ADVANCED
  EXPERT
}
